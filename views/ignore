
  var timeInput = $("#timeAvail");
  var bookingStatus = $("#bookingStatus");
  var availabilityForm = $("#addAvailability");
  var serviceProviderSelect = $("#SSP"); //author
  // Adding an event listener for when the form is submitted

  $(availabilityForm).on("submit", handleFormSubmit2);
  // Gets the part of the url that comes after the "?" (which we have if we're updating a post)
  var url = window.location.search;
  var availabilityId;
  var serviceProviderId;
  // Sets a flag for whether or not we're updating a post to be false initially
  var updating = false;

  // If we have this section in our url, we pull out the post id from the url
  // In '?availability_id=1', availabilityId is 1
  if (url.indexOf("?availability_id=") !== -1) {
    availabilityId = url.split("=")[1];
    getAvailabilityData(availabilityId, "availability");
  }
  // Otherwise if we have an serviceProvider_id in our url, preset the author select box to be our Author
  else if (url.indexOf("?serviceProvider_id=") !== -1) {
    serviceProviderId = url.split("=")[1];
  }

  // Getting the authors, and their posts
  getServiceProvider();

  // A function for handling what happens when the form to create a new post is submitted
  function handleFormSubmit2(event) {
    event.preventDefault();
    // Wont submit the post if we are missing a body, title, or author
    if (!timeInput.val().trim() || !bookingStatus.val().trim() || !ServiceProviderSelect.val()) {
      return;
    }
    // Constructing a newAvailability object to hand to the database
    var newAvailability = {
      time: timeInput
        .val()
        .trim(),
      booking: bookingStatus
        .val()
        .trim(),
      serviceProviderId: ServiceProviderSelect.val()
    };

    // If we're updating a post run updateAvailability to update a post
    // Otherwise run submitAvailability to create a whole new post
    if (updating) {
      newAvailability.id = availabilityId;
      updateAvailability(newAvailability);
    }
    else {
      submitAvailability(newAvailability);
    }
  }

  // Submits a new post and brings user to blog page upon completion
  function submitAvailability(post) {
    $.post("/api/availability", post, function () {
      window.location.href = "/availability";
    });
  }

  // Gets post data for the current post if we're editing, or if we're adding to an author's existing posts
  function getAvailabilityData(id, type) {
    var queryUrl;
    switch (type) {
      case "availability":
        queryUrl = "/api/availability/" + id;
        break;
      case "serviceProvider":
        queryUrl = "/api/serviceproviders/" + id;
        break;
      default:
        return;
    }
    $.get(queryUrl, function (data) {
      if (data) {
        console.log(data.serviceProviderId || data.id);
        // If this post exists, prefill our cms forms with its data
        timeInput.val(data.title);
        bookingStatus.val(data.body);
        serviceProviderId = data.serviceProviderId || data.id;
        // If we have a post with this id, set a flag for us to know to update the post
        // when we hit submit
        updating = true;
      }
    });
  }

  // A function to get Authors and then render our list of Authors
  function getServiceProvider() {
    $.get("/api/serviceproviders/, renderServiceProviderList);
  }
  // Function to either render a list of authors, or if there are none, direct the user to the page
  // to create an author first
  function renderServiceProviderList(data) {
    if (!data.length) {
      alert("nop data to show");
      //window.location.href = "/serviceprovider";
    }
    //$(".hidden").removeClass("hidden");
    var rowsToAdd = [];
    for (var i = 0; i < data.length; i++) {
      rowsToAdd.push(createServiceProviderRow(data[i]));
    }
    ServiceProviderSelect.empty();
    console.log(rowsToAdd);
    console.log(ServiceProviderSelect);
    ServiceProviderSelect.append(rowsToAdd);
    ServiceProviderSelect.val(serviceProviderId);
  }

  // Creates the author options in the dropdown
  function createServiceProviderRow(author) {
    var listOption = $("<option>");
    listOption.attr("value", author.id);
    listOption.text(author.name);
    return listOption;
  }

  // Update a given post, bring user to the blog page when done
  function updateAvailability(availability) {
    $.ajax({
      method: "PUT",
      url: "/api/availability",
      data: availability
    })
      .then(function () {
        //window.location.href = "/blog";
      });
  }
});